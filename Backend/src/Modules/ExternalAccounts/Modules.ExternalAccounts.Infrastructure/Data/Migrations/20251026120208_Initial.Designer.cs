// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.ExternalAccounts.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Modules.ExternalAccounts.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ExternalAccountsDbContext))]
    [Migration("20251026120208_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("external_accounts")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modules.ExternalAccounts.Domain.Aggregates.ExternalAccountLinkEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("character(26)")
                        .IsFixedLength();

                    b.Property<DateTime>("LastSyncedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LinkedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character(26)")
                        .IsFixedLength();

                    b.Property<long>("SyncInterval")
                        .HasColumnType("bigint");

                    b.ComplexProperty<Dictionary<string, object>>("ExternalAccountId", "Modules.ExternalAccounts.Domain.Aggregates.ExternalAccountLinkEntity.ExternalAccountId#ExternalAccountId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Kind")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("character varying(32)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("character varying(128)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Accounts", "external_accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
